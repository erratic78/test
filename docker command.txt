Docker容器连接
前面我们实现了通过网络端口来访问运行在docker容器内的服务。

容器中可以运行某些网络应用，要让外部也可以访问这些应用，可以通过-P或-p参数来指定端口映射。

下面我们来实现通过端口连接到一个docker容器。

网络端口映射
我们创建了一个python应用的容器。

runoob @ runoob：〜$ docker run -d -P training / webapp python app.py
fce072cc88cee71b1cdceb57c2821d054a4a59f67da6b416fceb5593f059fc6d
另外，我们可以指定容器绑定的网络地址，某些绑定127.0.0.1。

我们使用-P参数创建一个容器，使用docker ps可以看到容器端口5000绑定主机端口32768。

runoob @ runoob：〜$ docker ps
容器ID图像命令...端口名称
fce072cc88ce training / webapp“ python app.py” ... 0.0.0.0:32768->5000/tcp grave_hopper
我们也可以使用-p标识来指定容器端口绑定到主机端口。

两种方式的区别是：

-P：是容器内部端口随机映射到主机的高端口。
-p：是容器内部端口绑定到指定的主机端口。
runoob @ runoob：〜$ docker run -d -p 5000：5000 training / webapp python app.py
33e4523d30aaf0258915c368e66e03b49535de0ef20317d3f639d40222ba6bc0
runoob @ runoob：〜$ docker ps
容器ID图像命令...端口名称
33e4523d30aa training / webapp“ python app.py” ... 0.0.0.0:5000->5000/tcp berserk_bartik
fce072cc88ce training / webapp“ python app.py” ... 0.0.0.0:32768->5000/tcp grave_hopper
另外，我们可以指定容器绑定的网络地址，某些绑定127.0.0.1。

runoob @ runoob：〜$ docker run -d -p 127.0.0.1:5001:5000 training / webapp python app.py
95c6ceef88ca3e71eaf303c2833fd6701d8d1b2572b5613b5a932dfdfe8a857c
runoob @ runoob：〜$ docker ps
容器ID图像命令...端口名称
95c6ceef88ca training / webapp“ python app.py” ... 5000 / tcp，127.0.0.1:5001->5000/tcp adoring_stonebraker
33e4523d30aa training / webapp“ python app.py” ... 0.0.0.0:5000->5000/tcp berserk_bartik
fce072cc88ce training / webapp“ python app.py” ... 0.0.0.0:32768->5000/tcp grave_hopper
这样我们就可以通过访问127.0.0.1:5001来访问容器的5000英尺。

上面的示例中，至少都是绑定tcp范围，如果要绑定UDP扩展，可以在端口后面加上/ udp。

runoob @ runoob：〜$ docker run -d -p 127.0.0.1:5000:5000/udp training / webapp python app.py
6779686f06f6204579c1d655dd8b2b31e8e809b245a97b2d3a8e35abe9dcd22a
runoob @ runoob：〜$ docker ps
容器ID图像命令...端口名称
6779686f06f6培训/网络应用程序“ python app.py” ... 5000 / tcp，127.0.0.1:5000->5000/udp drunk_visvesvaraya
95c6ceef88ca training / webapp“ python app.py” ... 5000 / tcp，127.0.0.1:5001->5000/tcp adoring_stonebraker
33e4523d30aa training / webapp“ python app.py” ... 0.0.0.0:5000->5000/tcp berserk_bartik
fce072cc88ce training / webapp“ python app.py” ... 0.0.0.0:32768->5000/tcp grave_hopper
docker port命令可以让我们快捷地查看端口的绑定情况。

runoob @ runoob：〜$ docker端口adoring_stonebraker 5000
127.0.0.1:5001
Docker容器互联
进入映射并非唯一把docker连接到另一个容器的方法。

docker有一个连接系统允许将多个容器连接在一起，共享连接信息。

docker连接会创建一个父子关系，其中父容器可以看到子容器的信息。

容器命名
当我们创建一个容器的时候，docker会自动对它进行命名。另外，我们也可以使用--name标识来命名容器，例如：

runoob @ runoob：〜$ docker run -d -P --name runoob training / webapp python app.py
43780a6eabaaf14e590b6e849235c75f3012995403f97749775e38436db9a441
我们可以使用docker ps命令来查看容器名称。

runoob @ runoob：〜$ docker ps -l
容器ID图像命令...端口名称
43780a6eabaa培训/网络应用程序“ python app.py” ... 0.0.0.0:32769->5000/tcp runoob
新建网络
下面先创建一个新的Docker网络。
$ docker network create -d网桥测试网
